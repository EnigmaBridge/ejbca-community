#!/bin/bash 

echo "$0 aka, I'll do all for you if you answer my questions first-tool"



if [ "x${EJBCA_HOME}" = "x" ] ; then
        export EJBCA_HOME=/usr/share/ejbca
fi

if [ "x${JBOSS_HOME}" = "x" ] ; then
        export JBOSS_HOME=/usr/share/jboss4
fi

if [ "x${JAVA_HOME}" = "x" ] ; then
	if [ -d /usr/lib/jvm/java-1.5.0/ ] ; then
	        export JAVA_HOME=/usr/lib/jvm/java-1.5.0/
	elif [ -d /usr/lib/jvm/java-1.5.0-sun/ ] ; then
		export JAVA_HOME=/usr/lib/jvm/java-1.5.0-sun/		
	else
		echo "JAVA_HOME not set to a valid path for a working JDK"
		echo "set JAVA_HOME and rerun the setup"
		exit
	fi
fi

randompass() {
        MATRIX="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
        LENGTH="8"
        while [ "${n:=1}" -le "$LENGTH" ] ; do
                PASS="$PASS${MATRIX:$(($RANDOM%${#MATRIX})):1}"
                let n+=1
        done
        echo "$PASS"
}



### input ####
	defmysqladminroot=root
	echo
	echo "We'll need your MySQL admin username to setup the database for you?"
	echo -n "mysql-admin-root [${defmysqladminroot}]>"
	read mysqladminroot 
	if [ "x${mysqladminroot}" = "x" ] ; then
		mysqladminroot=${defmysqladminroot}
	fi

	defmysqladminpass=
	echo
	echo "We'll need your MySQL admin pass to setup the database for you?"
	echo -n "mysql-admin-pass [${defmysqladminpass}]>"
	read mysqladminpass
	if [ "x${mysqladminpass}" = "x" ] ; then
                mysqladminpass=${defmysqladminpass}
        fi

	defmysqlserverhostname=localhost
	echo
	echo "What is the MySQL hostname?"
	echo -n "mysql-serverhostname [${defmysqlserverhostname}]>"
	read mysqlserverhostname
	if [ "x${mysqlserverhostname}" = "x" ] ; then
                mysqlserverhostname=${defmysqlserverhostname}
        fi

	defmysqlejbcadbname=ejbca
	echo
	echo "What do you want the ejbca db to be called?"
	echo -n "mysql-ejbca-dbname [${defmysqlejbcadbname}]>"
	read mysqlejbcadbname
	if [ "x${mysqlejbcadbname}" = "x" ] ; then
                mysqlejbcadbname=${defmysqlejbcadbname}
        fi

	defmysqlejbcauser=ejbca
	echo
	echo "Select a MySQL ejbca username used to connect to the database from ejbca"
	echo -n "mysql-ejbca-user [${mysqlejbcauser}]>"
	read mysqlejbcauser
	if [ "x${mysqlejbcauser}" = "x" ] ; then
                mysqlejbcauser=${defmysqlejbcauser}
        fi

	# todo generate a random one
	defmysqlejbcapass=ejbca
	echo
	echo "Select a MySQL ejbca pass used to connect to the database from ejbca"
	echo -n "mysql-ejbca-pass [${defmysqlejbcapass}]>"
	read mysqlejbcapass
	if [ "x${mysqlejbcapass}" = "x" ] ; then
                mysqlejbcapass=${defmysqlejbcapass}
        fi

	defejbcaadmincaname="MyEjbca"
	echo
	echo "What do you want the ejbca adminca to be called ?"
	echo -n "ejbca-adminca-commonname [${defejbcaadmincaname}]>"
	read ejbcaadmincaname
	if [ "x${ejbcaadmincaname}" = "x" ] ; then
                ejbcaadmincaname=${defejbcaadmincaname}
        fi

	defejbcaorg="EJBCA in Debian"
	echo
	echo "What is the ejbca admin CA organisation?"
	echo -n "ejbca-org [${defejbcaorg}]>"
	read ejbcaorg
	if [ "x${ejbcaorg}" = "x" ] ; then
                ejbcaorg=${defejbcaorg}
        fi

	defejbcacountry=org
	echo
	echo "What is the ejbca admin CA country (SE,US,ORG)?"
	echo -n "ejbca-country [${defejbcacountry}]>"
	read ejbcacountry
	if [ "x${ejbcacountry}" = "x" ] ; then
                ejbcacountry=${defejbcacountry}
        fi

	defejbcaservername=localhost
	echo
	echo "What is the ejbca hostname (server.foo.com)?"
	echo -n "ejbca-servername [${defejbcaservername}]>"
	read ejbcaservername
	if [ "x${ejbcaservername}" = "x" ] ; then
                ejbcaservername=${defejbcaservername}
        fi

	echo
	echo "Do you want to see verbose output?"
	echo -n "verbose-output y/n [y]>"
	read verbose
	if [ "x$verbose" = "xy" -o "x$verbose" = "xY" -o "x$verbose" = "x"  ] ; then
		verbose=1	
	else
		verbose=0
	fi

#### generate some passwords
	cakeystorepass=`randompass`
	superadminpassword=`randompass`
	httpsserverpassword=`randompass`
	javakeystorepass=`randompass`

#### creating mysql db ####

	echo 'show tables' | mysql --user=$mysqladminroot --password=$mysqladminpass $mysqlejbcadbname >/dev/null 2>&1
	if [ $? -eq 0 ] ; then
		echo
		echo "database $mysqlejbcadbname does already exist, do you want to start fresh (I'll delete it and add a new ...)?"
		echo -n "drop-old-db y/n [y]>"
		read drop
		if [ "x$drop" = "xy" -o "x$drop" = "xY" -o "x$drop" = "x" ] ; then
			mysqladmin drop --user=$mysqladminroot --password=$mysqladminpass $mysqlejbcadbname 
        	else
			echo
			echo "ok, so now you need to sort this manually, then rerun me ( $0 )"
			exit 1
        	fi
		
	fi

	
	echo
	echo -n "creating ejbca mysql db: "
	mysqladmin create --user=$mysqladminroot --password=$mysqladminpass $mysqlejbcadbname 
	if [ $? -eq 0 ] ; then
		echo "ok"
		echo
	else
		echo "failed to create mysql database, you need to do it your self"
		exit 2	
	fi

#### creating mysql user ####
	echo
	echo -n "creating ejbca-mysql user: "
	echo "grant all privileges on ${mysqlejbcadbname}.* to ${mysqlejbcauser}@${mysqlserverhostname} identified by '${mysqlejbcapass}';" | mysql mysql --user=$mysqladminroot --password=$mysqladminpass
	if [ $? -eq 0 ] ; then
        	echo "ok"
		echo
	else
		echo "failed to create mysql ejbca user , you need to do it your self"
		exit 3
	fi

#### jboss chown:ing
	echo -n "changeing owner of installed files: "
	chown -R jboss /usr/share/ejbca
	chown -R jboss /etc/ejbca
	echo "ok"

#### mysql java connector
	echo -n "installing MySQL java connector in jboss: "
	cp /usr/share/java/mysql-connector-java.jar /usr/share/jboss4/server/default/lib/
	chmod 644 /usr/share/jboss4/server/default/lib/mysql-connector-java.jar
	echo "ok"
	echo

#### properties file 
	echo -n "applying your options to the *.properties files: "
	cp /usr/share/ejbca/conf/ejbca.properties.sample /etc/ejbca/ejbca.properties
	cp /usr/share/ejbca/conf/database.properties.sample /etc/ejbca/database.properties
	cp /usr/share/ejbca/conf/web.properties.sample /etc/ejbca/web.properties

# ejbca.properties
	perl -pi -e "s/java.ver=14/java.ver=15/" /etc/ejbca/ejbca.properties
	perl -pi -e "s/ca.name=AdminCA1/ca.name=${ejbcaadmincaname}/" /etc/ejbca/ejbca.properties
	perl -pi -e "s/ca.dn=CN=AdminCA1,O=EJBCA Sample,C=SE/ca.dn=CN=${ejbcaadmincaname},O=EJBCA in Debian,C=ORG/" /etc/ejbca/ejbca.properties
# TODO
#	perl -pi -e "s/ca.keystorepass=foo123/ca.keystorepass=${cakeystorepass}/" /etc/ejbca/cesecore.properties

#database.properties
	perl -pi -e "s/#database.name=mysql/database.name=mysql/" /etc/ejbca/database.properties
	perl -pi -e "s/#datasource.mapping=mySQL/datasource.mapping=mySQL/" /etc/ejbca/database.properties
	perl -pi -e "s/#database.url=jdbc:mysql:\/\/127.0.0.1:3306\/ejbca$/database.url=jdbc:mysql:\/\/127.0.0.1:3306\/${mysqlejbcadbname}/" /etc/ejbca/database.properties
	perl -pi -e "s/#database.driver=com.mysql.jdbc.Driver/database.driver=com.mysql.jdbc.Driver/" /etc/ejbca/database.properties
	perl -pi -e "s/#database.username=ejbca/database.username=${mysqlejbcauser}/" /etc/ejbca/database.properties
	perl -pi -e "s/#database.password=ejbca/database.password=${mysqlejbcapass}/" /etc/ejbca/database.properties

# web.properties
	perl -pi -e "s/httpsserver.password=serverpwd/httpsserver.password=${httpsserverpassword}/" /etc/ejbca/web.properties
	perl -pi -e "s/httpsserver.hostname=localhost/httpsserver.hostname=${ejbcaservername}/"     /etc/ejbca/web.properties
	perl -pi -e "s/httpsserver.dn=CN=localhost,O=EJBCA Sample,C=SE/httpsserver.dn=CN=${ejbcaservername},O=${ejbcaorg},C=${ejbcacountry}/" /etc/ejbca/web.properties
# TODO
#	perl -pi -e "s/java.trustpassword=changeit/java.trustpassword=${javakeystorepass}/"         /etc/ejbca/web.properties
# TODO 
#	perl -pi -e "s/superadmin.password=ejbca/superadmin.password=${superadminpassword}/"        /etc/ejbca/web.properties

	echo "ok"
	echo

### shell for jboss
	echo -n "setting up jboss user to have a shell: "
	usermod --shell /bin/bash jboss
	echo "ok"
	echo

#### stop:ing jbos for the bootstrap:ing
	/etc/init.d/jboss4 stop

	echo -n "running ejbca bootstrap: "
	cd /usr/share/ejbca
	antbootstrapfile=`tempfile || echo /tmp/ejbca.antbootstrapfile.$$`

	if [ $verbose -eq 1 ] ; then
#		su -p -s /bin/sh jboss -c "ant bootstrap -Dprecompiled=1" 
		su -p -s /bin/sh jboss -c "ant bootstrap " 
	else
#		su -p -s /bin/sh jboss -c "ant bootstrap -Dprecompiled=1" > $antbootstrapfile 2>&1
		su -p -s /bin/sh jboss -c "ant bootstrap " > $antbootstrapfile 2>&1
	fi
		
	if [ $? -eq 0 ] ; then
		echo "ok"
		echo
		rm -f $antbootstrapfile 
	else
		echo "ant bootstrap failed, see file: $antbootstrapfile for more info"
		exit 4
	fi


#### start jboss for the installing
        /etc/init.d/jboss4 start
	
	echo "waiting for jboss to start, <<<press enter>> when you see a row like this:"
	echo "18:46:14,299 INFO  [Server] JBoss (MX MicroKernel) [4.0.4.GA (build: CVSTag=JBoss_4_0_4_GA date=200612091937)] Started in 1m:866ms"

	sleep 3
	tail -f /var/log/jboss4/jboss4.out &
	tailpid=$!
	read a 
	kill $tailpid

	# removing old truststore
	rm -f $EJBCA_HOME/p12/truststore.jks 

	echo -n "running ejbca install: "
        antinstallfile=`tempfile || echo /tmp/ejbca.antinstallfile.$$`

        if [ $verbose -eq 1 ] ; then
#        	su -p -s /bin/sh jboss -c "ant install -Dprecompiled=1" 
        	su -p -s /bin/sh jboss -c "ant install " 
	else
#        	su -p -s /bin/sh jboss -c "ant install -Dprecompiled=1" > $antinstallfile 2>&1 
        	su -p -s /bin/sh jboss -c "ant install " > $antinstallfile 2>&1 
	fi
        if [ $? -eq 0 ] ; then
                echo "ok"
		echo
		rm -f $antinstallfile 
        else
                echo "ant install failed, see file: $antinstallfile for more info"
                exit 5
        fi


#### add the ca:cert to javatruststore (running this command as root)
#        echo -n "running ejbca install ca cert in java truststore: "
#
# ant javastruststore seems broken
#       	su -p -s /bin/sh jboss -c "ant javatruststore -Dprecompiled=1" 
#       	su -p -s /bin/sh jboss -c "ant javatruststore" 
#	
# manually doing the same as ant javastruststore
#	rm -f /tmp/rootcert.der
#	cd $EJBCA_HOME
#	./bin/ejbca.sh ca getcacert  /tmp/rootcert.der  -der 
#	keytool -import -keystore $EJBCA_HOME/p12/truststore.jks -file /tmp/rootcert.der -storepass ${javakeystorepass} -noprompt -trustcacerts
#	# ant doesn't return anything but true ....
#	echo "ok"
#	echo
	
#### and the deploy
        echo -n "running ejbca deploy: "
        antdeployfile=`tempfile || echo /tmp/ejbca.antdeployfile.$$`
        if [ $verbose -eq 1 ] ; then
#        	su -p -s /bin/sh jboss -c "ant deploy -Dprecompiled=1" 
        	su -p -s /bin/sh jboss -c "ant deploy " 
	else
#        	su -p -s /bin/sh jboss -c "ant deploy -Dprecompiled=1" > $antdeployfile 2>&1
        	su -p -s /bin/sh jboss -c "ant deploy " > $antdeployfile 2>&1
	fi
        if [ $? -eq 0 ] ; then
                echo "ok"
		echo
                rm -f $antdeployfile
        else
                echo "ant deploy failed, see file: $antdeployfile for more info"
                exit 6
        fi
	

	echo "sleeping alitte before doing a reinstall of ca-cert ..."	
	i=0
	while [ $i -lt 60 ]  ; do 
		i=`expr $i + 1`
		echo -n "."
	done
	echo 


#### final restart to make the new keystores and certs get gooing

	/etc/init.d/jboss4 restart

	echo "now you can import /etc/ejbca/p12/superadmin.p12 into your browser and steer to: https://$ejbcaservername:8443/ejbca and get gooing"
	exit 0

